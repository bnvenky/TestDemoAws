# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'

    # Cache backend dependencies
    - name: Cache backend dependencies
      uses: actions/cache@v2
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-

    # Cache frontend dependencies
    - name: Cache frontend dependencies
      uses: actions/cache@v2
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-frontend-
    
    - name: Create Backend .env
      run: |
        cd backend
        echo "PORT=${{ secrets.PORT }}" > .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        
    - name: Create Frontend .env
      run: |
        cd frontend
        echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env
    
    - name: Install and Build Backend
      working-directory: ./backend
      run: |
        # Only install if node_modules doesn't exist or package.json has changed
        if [ ! -d "node_modules" ] || [ ! -f "package-lock.json" ] || [ "$(stat -c %Y package.json)" -gt "$(stat -c %Y node_modules)" ]; then
          npm ci
        fi
        pm2 delete backend || true
        pm2 start app.js --name "backend"
        pm2 save
        
    - name: Install and Build Frontend
      working-directory: ./frontend
      run: |
        # Only install if node_modules doesn't exist or package.json has changed
        if [ ! -d "node_modules" ] || [ ! -f "package-lock.json" ] || [ "$(stat -c %Y package.json)" -gt "$(stat -c %Y node_modules)" ]; then
          npm ci
        fi
        rm -rf build
        npm run build
        
    - name: Deploy Frontend Build
      run: |
        sudo rm -rf /var/www/app/TestDemoAws/frontend/build
        sudo mkdir -p /var/www/app/TestDemoAws/frontend
        sudo cp -r frontend/build /var/www/app/TestDemoAws/frontend/
        sudo chown -R ubuntu:ubuntu /var/www/app
        sudo chmod -R 755 /var/www/app
        
    - name: Restart Nginx
      run: |
        sudo systemctl restart nginx
